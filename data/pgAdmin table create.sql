-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.alembic_version
(
    version_num character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num)
);

CREATE TABLE IF NOT EXISTS public.amenities
(
    amenity_id integer NOT NULL DEFAULT nextval('amenities_amenity_id_seq'::regclass),
    amenity_description text COLLATE pg_catalog."default" NOT NULL,
    amenity_premium numeric NOT NULL,
    amenity_deleted timestamp without time zone,
    amenity_deleted_note text COLLATE pg_catalog."default",
    CONSTRAINT amenities_pkey PRIMARY KEY (amenity_id)
);

CREATE TABLE IF NOT EXISTS public.guest_transactions
(
    guest_transaction_id integer NOT NULL DEFAULT nextval('guest_transactions_guest_transaction_id_seq'::regclass),
    transaction_type_id integer NOT NULL,
    guest_id integer NOT NULL,
    guest_transaction_charge numeric NOT NULL,
    guest_transaction_payment numeric NOT NULL,
    guest_transaction_date timestamp without time zone NOT NULL,
    guest_transaction_deleted timestamp without time zone,
    guest_transaction_description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT guest_transactions_pkey PRIMARY KEY (guest_transaction_id)
);

CREATE TABLE IF NOT EXISTS public.guests
(
    guest_id integer NOT NULL DEFAULT nextval('guests_guest_id_seq'::regclass),
    guest_first_name text COLLATE pg_catalog."default" NOT NULL,
    guest_middle_initial character varying(1) COLLATE pg_catalog."default",
    guest_last_name text COLLATE pg_catalog."default" NOT NULL,
    guest_phone_number text COLLATE pg_catalog."default" NOT NULL,
    guest_email text COLLATE pg_catalog."default",
    guest_state character varying(2) COLLATE pg_catalog."default",
    guest_birthdate date NOT NULL,
    guest_created_date timestamp without time zone,
    guest_last_updated timestamp without time zone DEFAULT now(),
    CONSTRAINT guests_pkey PRIMARY KEY (guest_id)
);

CREATE TABLE IF NOT EXISTS public.guests_stays
(
    guest_id integer NOT NULL,
    stay_id integer NOT NULL,
    guest_stay_active boolean NOT NULL,
    CONSTRAINT guests_stays_pkey PRIMARY KEY (guest_id, stay_id)
);

CREATE TABLE IF NOT EXISTS public.rate_schedules
(
    rate_schedule_id integer NOT NULL DEFAULT nextval('rate_schedules_rate_schedule_id_seq'::regclass),
    rate_start_date timestamp without time zone,
    rate_end_date timestamp without time zone,
    rate_discount numeric,
    rate_premium numeric,
    CONSTRAINT rate_schedules_pkey PRIMARY KEY (rate_schedule_id)
);

CREATE TABLE IF NOT EXISTS public.room_type_rates
(
    room_type_id integer NOT NULL,
    rate_schedule_id integer NOT NULL,
    CONSTRAINT room_type_rates_pkey PRIMARY KEY (room_type_id, rate_schedule_id)
);

CREATE TABLE IF NOT EXISTS public.room_types
(
    room_type_id integer NOT NULL DEFAULT nextval('room_types_room_type_id_seq'::regclass),
    room_type_bed_type text COLLATE pg_catalog."default" NOT NULL,
    room_type_bed_count integer NOT NULL,
    room_type_max_occupants integer NOT NULL,
    room_type_base_rate numeric NOT NULL,
    CONSTRAINT room_types_pkey PRIMARY KEY (room_type_id),
    CONSTRAINT room_types_room_type_bed_type_key UNIQUE (room_type_bed_type)
);

CREATE TABLE IF NOT EXISTS public.rooms
(
    room_number text COLLATE pg_catalog."default" NOT NULL,
    room_ready boolean NOT NULL,
    room_available timestamp without time zone,
    room_type_id integer NOT NULL,
    room_fits_crib boolean NOT NULL,
    room_deleted timestamp without time zone,
    room_deleted_note text COLLATE pg_catalog."default",
    CONSTRAINT rooms_pkey PRIMARY KEY (room_number)
);

CREATE TABLE IF NOT EXISTS public.rooms_amenities
(
    room_number text COLLATE pg_catalog."default" NOT NULL,
    amenity_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.stay_balances
(
    stay_balance_id integer NOT NULL DEFAULT nextval('stay_balances_stay_balance_id_seq'::regclass),
    stay_total_charges numeric NOT NULL,
    stay_total_payments numeric NOT NULL,
    stay_balance numeric NOT NULL,
    stay_id integer NOT NULL,
    CONSTRAINT stay_balances_pkey PRIMARY KEY (stay_balance_id)
);

CREATE TABLE IF NOT EXISTS public.stays
(
    stay_id integer NOT NULL DEFAULT nextval('stays_stay_id_seq'::regclass),
    room_number text COLLATE pg_catalog."default" NOT NULL,
    stay_holder_guest_id integer NOT NULL,
    stay_check_in timestamp without time zone NOT NULL,
    stay_actual_check_in timestamp without time zone,
    stay_check_out timestamp without time zone NOT NULL,
    stay_actual_check_out timestamp without time zone,
    stay_occupant_count integer NOT NULL,
    stay_duration integer NOT NULL,
    stay_status text COLLATE pg_catalog."default" NOT NULL,
    stay_cancel_date timestamp without time zone,
    stay_last_updated timestamp without time zone DEFAULT now(),
    stay_created_date timestamp without time zone DEFAULT now(),
    CONSTRAINT stays_pkey PRIMARY KEY (stay_id)
);

CREATE TABLE IF NOT EXISTS public.transaction_types
(
    transaction_type_id integer NOT NULL DEFAULT nextval('transaction_types_transaction_type_id_seq'::regclass),
    transaction_type_description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT transaction_types_pkey PRIMARY KEY (transaction_type_id)
);

CREATE TABLE IF NOT EXISTS public.transactions_to_balances
(
    guest_transaction_id integer NOT NULL,
    stay_balance_id integer NOT NULL,
    CONSTRAINT transactions_to_balances_pkey PRIMARY KEY (guest_transaction_id, stay_balance_id)
);

ALTER TABLE IF EXISTS public.guest_transactions
    ADD CONSTRAINT guest_transactions_guest_id_fkey FOREIGN KEY (guest_id)
    REFERENCES public.guests (guest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.guest_transactions
    ADD CONSTRAINT guest_transactions_transaction_type_id_fkey FOREIGN KEY (transaction_type_id)
    REFERENCES public.transaction_types (transaction_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.guests_stays
    ADD CONSTRAINT guests_stays_guest_id_fkey FOREIGN KEY (guest_id)
    REFERENCES public.guests (guest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.guests_stays
    ADD CONSTRAINT guests_stays_stay_id_fkey FOREIGN KEY (stay_id)
    REFERENCES public.stays (stay_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.room_type_rates
    ADD CONSTRAINT room_type_rates_rate_schedule_id_fkey FOREIGN KEY (rate_schedule_id)
    REFERENCES public.rate_schedules (rate_schedule_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.room_type_rates
    ADD CONSTRAINT room_type_rates_room_type_id_fkey FOREIGN KEY (room_type_id)
    REFERENCES public.room_types (room_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rooms
    ADD CONSTRAINT rooms_room_type_id_fkey FOREIGN KEY (room_type_id)
    REFERENCES public.room_types (room_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rooms_amenities
    ADD CONSTRAINT rooms_amenities_amenity_id_fkey FOREIGN KEY (amenity_id)
    REFERENCES public.amenities (amenity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rooms_amenities
    ADD CONSTRAINT rooms_amenities_room_number_fkey FOREIGN KEY (room_number)
    REFERENCES public.rooms (room_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stay_balances
    ADD CONSTRAINT stay_balances_stay_id_fkey FOREIGN KEY (stay_id)
    REFERENCES public.stays (stay_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.stays
    ADD CONSTRAINT stays_room_number_fkey FOREIGN KEY (room_number)
    REFERENCES public.rooms (room_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions_to_balances
    ADD CONSTRAINT transactions_to_balances_guest_transaction_id_fkey FOREIGN KEY (guest_transaction_id)
    REFERENCES public.guest_transactions (guest_transaction_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions_to_balances
    ADD CONSTRAINT transactions_to_balances_stay_balance_id_fkey FOREIGN KEY (stay_balance_id)
    REFERENCES public.stay_balances (stay_balance_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
